@startuml othello
skinparam PackageStyle rectangle

package ゲーム集約(仮) {
    object ゲーム {
        ゲームID
    }
}

note right of ゲーム
    システム
    * ゲスト/ユーザ登録どちらも可
    * 2P対戦、CPU対戦が可能
    * ゲーム中断後の再開期限は
       ゲスト：セッションが切れるまで
       ユーザ：原則無期限？
    初期条件
    * ターン数は1から始まる
    * プレイヤーは２人、それぞれに色を割り振る。
    * (原則的に)白色プレイヤーが先攻
    * 初期状態では盤面の石は白２黒２を市松模様に配置
    終了条件
    * ２回スキップが続いた場合
    * お互いが石を置くことができる場所がなくなった場合
       (盤が全て埋まった場合を含む)
    勝敗条件
    * 終了時、相手より自分の色の石の数が多い方の勝ち
    * 途中経過の石の数は勝敗に影響しない
end note

ゲーム "1" *-down- "2" プレイヤー

package プレイヤー集約(仮) {
    object プレイヤー {
        プレイヤーID
        色
        名前
        人間orCPU
    }
}

note right of プレイヤー
    * ユーザ登録をしている場合、自動で設定可能
    * ゲストの場合は自分で入力(デフォルのままもOK)
end note


package ターンフロー集約 {
    object ターンフロー {
        現在のターン
        次のターン
    }
}
    
note right of ターンフロー
    前後のターンの変化と行動を管理
    * プレイヤーは毎ターン必ず交代する
    * 行動する度、ターン数が1増加する
    * 行動は「置く」と「スキップ」だけ
    * 1ターンに行動できるのは一回だけ
    * 次のターンが通常行動かスキップか判定
    * ひっくり返された石の位置などを保管
end note

ターンフロー "1" -down-> "2" ターン

package ターン集約 {
    object ターン {
        ターン番号(ID)
        行動する側の色
    }

    object 盤面 {
        盤面
    }

    object スキップカウント {
        スキップ数
    }

    object ターンカウント {
        ターン数
    }
}

note right of ターン
    1ターン分の情報を管理・提供する。
    * スナップショットのような情報だけ保持し、状態遷移は扱わない。
    * ターン中は片方の色だけ行動可能
    * 行動できるのは1回だけ
    * 石を置くことができるできるかどうか判定
      (「盤面」と「色」に依存)
    * プレイヤーの知識は持たない
end note

note bottom of 盤面
    盤面に関するルールと状態を管理
    * 同じ色で連続する別の色をはさむことができるときだけ置くことができる
    * はさまれた石は色が反転する
    * 盤面は原則8x8マス
    * 盤面外には置けない  
    * 石の数や置ける場所などの情報を提供
end note

note bottom of スキップカウント
    * 1ずつアップする
    * 値はリセット可能
end note

note bottom of ターンカウント
    * 1ずつアップする
    * 値はリセット不可能
end note

ターン "1" *-down- "1" 盤面
ターン "1" *-down- "1" スキップカウント
ターン "1" *-down- "1" ターンカウント
@enduml