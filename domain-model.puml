@startuml othello
skinparam PackageStyle rectangle

package ゲーム集約 {
    object ゲーム {
        ゲームID
        白プレイヤー
        黒プレイヤー
        ゲームステータス
    }
}

ゲーム "1" *-down- "1" ターン

package ターン集約 {
    object ターン {
        ターン数
        スキップ数
        行動可能な色
    }
    object 盤面 {
        盤面
    }
}
    
ターン "1" *-down- "1" 盤面

note right of ゲーム
    * プレイヤーにはゲスト/登録ユーザ/CPUを設定できる
    * 最低一人の人間のプレイヤーが必要
    * ゲームのステータスはプレイ中・白勝利・黒勝利・引き分け・中断・放棄
end note


object ゲームルール {

}

note right of ゲームルール
    初期条件
    * 原則的に白色プレイヤーが先攻
    ゲーム中
    * ターン中は片方の色だけ行動可能
    * 毎ターンプレイヤーが交代する
    * 「盤面の配置」と「置く石の色」によって行動できるかどうか決まる
    ゲームの終了条件
    * ２連続でスキップが続いた場合
    * 盤が全て埋まった場合
    勝敗条件
    * 終了時、相手より自分の色の石の数が多い方の勝ち
    * 途中経過の石の数は勝敗に影響しない
end note

note right of ターン
    * ターン数は1から始まり、必ず1ずつ増える
    * 行動(変更)できるのは1ターンに1回だけ
    * 行動できない場合はスキップ数が増える
    * スキップ数は0から始まる。スキップされると1ずつ増える。それ以外の場合は常に0にリセット。
end note

note bottom of 盤面
    * 初期状態では白２黒２を中央に市松模様に配置
    * 同じ色で連続する別の色をはさむことができるときだけ置くことができる
    * はさまれた石は色が反転する
    * 盤面は原則8x8マス
    * 盤面外には置けない  
end note

' note bottom of スキップカウント
'     * 1ずつアップする
'     * 値はリセット可能
' end note

' note bottom of ターンカウント
'     * 1ずつアップする
'     * 値はリセット不可能
' end note

' package ターンフロー集約 {
'     object ターンフロー {
'         現在のターン
'         次のターン
'     }
    
' }

' note right of ターンフロー
'     前後のターンの変化と行動を管理
'     * プレイヤーは毎ターン必ず交代する
'     * 行動する度、ターン数が1増加する
'     * 行動は「置く」と「スキップ」だけ
'     * 1ターンに行動できるのは一回だけ
'     * 次のターンが通常行動かスキップか判定
'     * ひっくり返された石の位置などを保管
' end note

' note right of プレイヤー
'     * ユーザ登録をしている場合、自動で設定可能
'     * ゲストの場合は自分で入力(デフォルのままもOK)
' end note

' ゲーム "1" *-down- "2" プレイヤー

' package プレイヤー集約(仮) {
'     object プレイヤー {
'         プレイヤーID
'         色
'         名前
'         人間orCPU
'     }
' }

@enduml